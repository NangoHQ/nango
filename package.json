{
    "name": "@nangohq/nango",
    "type": "module",
    "version": "0.58.6",
    "workspaces": [
        "packages/*",
        "scripts"
    ],
    "scripts": {
        "create:migration": "cd packages/database/lib && knex migrate:make $1 --esm --knexfile ./knexfile.cjs",
        "undo:migration": "cd packages/database/lib && knex migrate:rollback --esm --knexfile ./knexfile.cjs",
        "prettier-format": "prettier --config .prettierrc \"./**/*.{ts,tsx}\" --write",
        "prettier-watch": "onchange './**/*.{ts,tsx}' -- prettier --write {{changed}}",
        "lint": "eslint . ",
        "lint:fix": "eslint . --fix",
        "ts-build": "tsc -b tsconfig.build.json",
        "ts-build:docker": "tsc -b tsconfig.docker.json",
        "ts-clean": "npx rimraf packages/*/tsconfig.tsbuildinfo packages/*/dist",
        "webapp-build": "cd ./packages/webapp && npm run build && cd ../..",
        "webapp-build:watch": "tsc -b -w packages/webapp/tsconfig.json",
        "docker-build:unified": "./scripts/build_docker.sh",
        "build:hosted": "npm ci && npm run ts-build && npm run webapp-build && npm run connect-ui:build",
        "build:prod": "npm ci && npm run ts-build && npm run webapp-build",
        "server:dev:watch": "cd ./packages/server && npm run dev",
        "jobs:dev:watch": "npm run dev -w @nangohq/nango-jobs",
        "persist:dev:watch": "npm run dev -w @nangohq/nango-persist",
        "orchestrator:dev:watch": "npm run dev -w @nangohq/nango-orchestrator",
        "webapp:dev:watch": "cd ./packages/webapp && npm run dev",
        "connect-ui:dev:watch": "cd ./packages/connect-ui && npm run dev",
        "connect-ui:build": "npm run -w @nangohq/connect-ui build",
        "prepare": "husky install",
        "build:watch": "tsc -b -w --preserveWatchOutput tsconfig.build.json",
        "dev:watch": "npm run -w nango copy:files && npm run build:watch",
        "watch:dev": "npm run dev:watch",
        "dev:watch:apps": "concurrently --names 'srv,web,job,prs,orc,con' --kill-others \"npm run server:dev:watch\" \"npm run webapp:dev:watch\" \"npm run jobs:dev:watch\" \"npm run persist:dev:watch\" \"npm run orchestrator:dev:watch\" \"npm run connect-ui:dev:watch\"",
        "dev:watch:headless": "concurrently --names 'srv,job,prs,orc' --kill-others \"npm run server:dev:watch\" \"npm run jobs:dev:watch\" \"npm run persist:dev:watch\" \"npm run orchestrator:dev:watch\"",
        "dev:watch:web": "concurrently --names 'srv,web' --kill-others \"npm run server:dev:watch\" \"npm run webapp:dev:watch\" \"npm run connect-ui:dev:watch\"",
        "watch:dev:apps": "npm run dev:watch:apps",
        "dw": "npm run dev:watch",
        "dwa": "npm run dev:watch:apps",
        "dwh": "npm run dev:watch:headless",
        "test": "concurrently --kill-others \"npm run test:unit\" \"npm run test:integration\" \"npm run test:cli\"",
        "test:unit": "vitest",
        "test:integration": "vitest --config ./vite.integration.config.ts",
        "test:cli": "vitest --config ./vite.cli.config.ts",
        "test:cli:update-snapshots": "vitest --config ./vite.cli.config.ts --update",
        "test:openapi": "npx @apidevtools/swagger-cli validate docs-v2/spec.yaml",
        "test:providers": "npx tsx scripts/validation/providers/validate.ts",
        "docs": "tsx scripts/docs-gen-snippets.ts && cd ./docs-v2 && npx mintlify dev --port 3033",
        "docs:generate": "tsx scripts/docs-gen-snippets.ts",
        "nango": "cd ./packages/server && npm run nango",
        "dev:docker": "docker compose --file dev/docker-compose.dev.yaml up -d",
        "changelog:providers": "tsx scripts/provider-changelog.ts",
        "changelog:integrations": "tsx scripts/pre-built-integrations-changelog.ts"
    },
    "devDependencies": {
        "@eslint/js": "9.25.1",
        "@testcontainers/elasticsearch": "10.24.2",
        "@testcontainers/postgresql": "10.24.2",
        "@types/node": "20.17.16",
        "@typescript-eslint/eslint-plugin": "8.31.0",
        "@typescript-eslint/parser": "8.31.0",
        "concurrently": "8.2.2",
        "eslint": "9.25.1",
        "eslint-config-prettier": "10.1.2",
        "eslint-plugin-import": "2.31.0",
        "eslint-plugin-prettier": "5.2.6",
        "eslint-plugin-react": "7.37.5",
        "eslint-plugin-react-hooks": "5.2.0",
        "eslint-plugin-unicorn": "58.0.0",
        "globals": "15.14.0",
        "husky": "8.0.3",
        "lint-staged": "15.5.1",
        "onchange": "7.1.0",
        "prettier": "3.5.3",
        "rimraf": "6.0.1",
        "testcontainers": "10.24.2",
        "tsx": "4.19.3",
        "typescript": "5.7.3",
        "typescript-eslint": "8.31.0",
        "vitest": "3.1.2"
    },
    "lint-staged": {
        "*.{js,jsx,ts,tsx,cjs}": [
            "eslint --fix --quiet"
        ],
        "*.{html,css,json,yaml}": [
            "prettier --write"
        ]
    },
    "engines": {
        "node": ">=18.0.0 || >=20.0.0"
    }
}
