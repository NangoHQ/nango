// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`mapping > should create one index automatically on log 1`] = `
{
  "mappings": {
    "dynamic": "false",
    "properties": {
      "accountId": {
        "type": "keyword",
      },
      "accountName": {
        "type": "keyword",
      },
      "connectionId": {
        "type": "keyword",
      },
      "connectionName": {
        "analyzer": "standard",
        "fields": {
          "keyword": {
            "type": "keyword",
          },
        },
        "type": "text",
      },
      "context": {
        "type": "keyword",
      },
      "createdAt": {
        "type": "date",
      },
      "durationMs": {
        "type": "integer",
      },
      "endUserId": {
        "type": "keyword",
      },
      "endUserName": {
        "type": "keyword",
      },
      "endedAt": {
        "type": "date",
      },
      "environmentId": {
        "type": "keyword",
      },
      "environmentName": {
        "type": "keyword",
      },
      "error": {
        "properties": {
          "message": {
            "copy_to": [
              "meta_search",
            ],
            "type": "keyword",
          },
          "name": {
            "copy_to": [
              "meta_search",
            ],
            "type": "keyword",
          },
          "payload": {
            "enabled": false,
            "type": "object",
          },
          "type": {
            "copy_to": [
              "meta_search",
            ],
            "type": "keyword",
          },
        },
      },
      "expiresAt": {
        "type": "date",
      },
      "id": {
        "type": "keyword",
      },
      "integrationId": {
        "type": "keyword",
      },
      "integrationName": {
        "analyzer": "standard",
        "fields": {
          "keyword": {
            "type": "keyword",
          },
        },
        "type": "text",
      },
      "jobId": {
        "type": "keyword",
      },
      "level": {
        "type": "keyword",
      },
      "message": {
        "analyzer": "standard",
        "copy_to": [
          "meta_search",
        ],
        "type": "text",
      },
      "meta": {
        "enabled": false,
        "type": "object",
      },
      "meta_search": {
        "analyzer": "standard",
        "type": "text",
      },
      "operation": {
        "properties": {
          "action": {
            "type": "keyword",
          },
          "type": {
            "type": "keyword",
          },
        },
      },
      "parentId": {
        "type": "keyword",
      },
      "persistResults": {
        "properties": {
          "added": {
            "type": "integer",
          },
          "addedKeys": {
            "copy_to": [
              "meta_search",
            ],
            "type": "keyword",
          },
          "deleteKeys": {
            "copy_to": [
              "meta_search",
            ],
            "type": "keyword",
          },
          "deleted": {
            "type": "integer",
          },
          "model": {
            "type": "keyword",
          },
          "unchanged": {
            "type": "integer",
          },
          "unchangedKeys": {
            "copy_to": [
              "meta_search",
            ],
            "type": "keyword",
          },
          "updated": {
            "type": "integer",
          },
          "updatedKeys": {
            "copy_to": [
              "meta_search",
            ],
            "type": "keyword",
          },
        },
      },
      "providerName": {
        "type": "keyword",
      },
      "request": {
        "properties": {
          "headers": {
            "enabled": false,
            "type": "object",
          },
          "method": {
            "type": "keyword",
          },
          "url": {
            "type": "keyword",
          },
        },
      },
      "response": {
        "properties": {
          "code": {
            "copy_to": [
              "meta_search",
            ],
            "type": "integer",
          },
          "headers": {
            "enabled": false,
            "type": "object",
          },
        },
      },
      "retry": {
        "properties": {
          "attempt": {
            "type": "integer",
          },
          "max": {
            "type": "integer",
          },
          "waited": {
            "type": "integer",
          },
        },
      },
      "source": {
        "type": "keyword",
      },
      "startedAt": {
        "type": "date",
      },
      "state": {
        "type": "keyword",
      },
      "syncConfigId": {
        "type": "keyword",
      },
      "syncConfigName": {
        "analyzer": "standard",
        "fields": {
          "keyword": {
            "type": "keyword",
          },
        },
        "type": "text",
      },
      "type": {
        "type": "keyword",
      },
      "updatedAt": {
        "type": "date",
      },
      "userId": {
        "type": "keyword",
      },
    },
  },
}
`;

exports[`mapping > should create one index automatically on log 2`] = `
{
  "analyzer": {
    "default": {
      "type": "standard",
    },
    "default_search": {
      "type": "standard",
    },
  },
}
`;

exports[`mapping > should create one index automatically on log 3`] = `
{
  "field": [
    "createdAt",
    "id",
  ],
  "order": [
    "desc",
    "desc",
  ],
}
`;

exports[`mapping > should create one index automatically on log 4`] = `
{
  "name": "policy_retention",
}
`;
