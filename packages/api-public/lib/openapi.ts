/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    '/': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: Record<string, unknown>;
                    content: {
                        'application/json': {
                            success: boolean;
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: Record<string, unknown>;
                    content: {
                        'application/json': components['schemas']['ResponseNotFound'];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/v2/integrations/': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List all integrations
         * @description List all integrations
         */
        get: operations['listIntegrations'];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/v2/integrations/{uniqueName}/': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get an integration by its unique name
         * @description Get an integration by its unique name
         */
        get: operations['getIntegration'];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        ResponseNotFoundInput: {
            error: {
                /** @constant */
                code: 'not_found';
                /** Format: uuid */
                errorId?: string;
                message: string;
            };
        };
        ResponseServerErrorInput: {
            error: {
                /** @constant */
                code: 'server_error';
                /** Format: uuid */
                errorId?: string;
                message: string;
            };
        };
        ResponseUnauthorizedInput: {
            error: {
                /** @constant */
                code: 'unauthorized';
                message: string;
            };
        };
        IntegrationInput: {
            uniqueName: string;
            displayName: string;
            provider: string;
            logoUrl: string;
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            updatedAt: string;
        };
        ResponseNotFound: {
            error: {
                /** @constant */
                code: 'not_found';
                /** Format: uuid */
                errorId?: string;
                message: string;
            };
        };
        ResponseServerError: {
            error: {
                /** @constant */
                code: 'server_error';
                /** Format: uuid */
                errorId?: string;
                message: string;
            };
        };
        ResponseUnauthorized: {
            error: {
                /** @constant */
                code: 'unauthorized';
                message: string;
            };
        };
        Integration: {
            uniqueName: string;
            displayName: string;
            provider: string;
            logoUrl: string;
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            updatedAt: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    listIntegrations: {
        parameters: {
            query?: {
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: Record<string, unknown>;
                content: {
                    'application/json': {
                        success: boolean;
                        data: components['schemas']['Integration'][];
                    };
                };
            };
            /** @description Default Response */
            404: {
                headers: Record<string, unknown>;
                content: {
                    'application/json': components['schemas']['ResponseNotFound'];
                };
            };
            /** @description Default Response */
            500: {
                headers: Record<string, unknown>;
                content: {
                    'application/json': components['schemas']['ResponseServerError'];
                };
            };
        };
    };
    getIntegration: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                uniqueName: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: Record<string, unknown>;
                content: {
                    'application/json': {
                        success: boolean;
                        data: components['schemas']['Integration'];
                    };
                };
            };
            /** @description Default Response */
            404: {
                headers: Record<string, unknown>;
                content: {
                    'application/json': components['schemas']['ResponseNotFound'];
                };
            };
            /** @description Default Response */
            500: {
                headers: Record<string, unknown>;
                content: {
                    'application/json': components['schemas']['ResponseServerError'];
                };
            };
        };
    };
}
