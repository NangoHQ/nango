// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`generate function tests > should be able to migrate-endpoints 1`] = `
"integrations:
    demo-github-integration:
        syncs:
            github-issue-example:
                description: |
                    Sync github issues continuously from public repos
                sync_type: incremental
                auto_start: true
                runs: every half hour
                scopes: public_repo
                output: GithubIssue
                endpoint:
                  method: GET
                  path: /github/issues
                webhook-subscriptions:
                    - issue.creation
            github-issue-example-two:
                description: |
                    Sync github issues continuously from public repos example two
                sync_type: incremental
                auto_start: true
                runs: every hour
                endpoint:
                  method: GET
                  path: /ticketing/tickets-two
                scopes: public_repo
                output: GithubIssue2
            github-multiple-models:
                description: Sync github issues to multiple models
                sync_type: full
                auto_start: true
                runs: every 5 minutes
                endpoint:
                    - method: GET
                      path: /ticketing/ticket
                    - method: GET
                      path: /ticketing/pr
                output:
                    - GithubIssue3
                    - GithubPR
        actions:
            github-get-issue:
                description: Get a GitHub issue.
                endpoint:
                  method: GET
                  path: /ticketing/tickets/{GithubCreateIssueInput:id}
                output: GithubIssueAction
                scopes: repo:read
            github-create-issue:
                description: Creates a GitHub issue.
                endpoint:
                  method: POST
                  path: /ticketing/tickets
                scopes: repo:write
                input: GithubCreateIssueInput
                output: GithubCreateOutput
            github-delete-issue:
                description: Deletes a GitHub issue.
                endpoint:
                  method: DELETE
                  path: /ticketing/tickets/{GithubIssue:id}
                scopes: repo:write
                output: boolean

models:
    GithubIssue:
        id: integer
        owner: string
        repo: string
        issue_number: number
        title: string
        author: string
        author_id: string
        state: string
        date_created: date
        date_last_modified: date
        body: string
    GithubIssueAction:
        __extends: GithubIssue
    GithubIssue2:
        __extends: GithubIssue
    GithubIssue3:
        __extends: GithubIssue
    GithubCreateIssueInput:
        __extends: GithubIssue
    GithubCreateOutput:
        result: GithubIssue
    GithubPR:
        __extends: GithubIssue
"
`;
