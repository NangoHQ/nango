name: Deploy to GCP VM (Docker Compose)

on:
  push:
    branches: [cicd]
    paths:
      - "docker-compose.yaml"
      - "packages/providers/providers.yaml"
      - ".github/workflows/deploy-gcp-compose.yml"
  workflow_dispatch:
    inputs:
      deploy_dir:
        description: "Remote deploy dir override (else use secret)"
        required: false

permissions:
  contents: read

jobs:
  deploy:
    name: Sync → Compose Up → Healthcheck → Rollback
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy docker-compose.yaml
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          source: "docker-compose.yaml"
          target: "${{ github.event.inputs.deploy_dir || secrets.DEPLOY_DIR }}"

      - name: Copy providers.yaml
        if: ${{ hashFiles('packages/providers/providers.yaml') != '' }}
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          source: "packages/providers/providers.yaml"
          target: "${{ github.event.inputs.deploy_dir || secrets.DEPLOY_DIR }}/packages/providers"
          strip_components: 2

      - name: Deploy via SSH
        id: ssh
        uses: appleboy/ssh-action@v1.2.0
        env:
          DEPLOY_DIR: ${{ github.event.inputs.deploy_dir || secrets.DEPLOY_DIR }}
          HEALTH_URL: ${{ secrets.HEALTH_URL }}   
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script_stop: true
          script: |
            set -euo pipefail
            cd "$DEPLOY_DIR"

            # Pastikan docker & compose terpasang
            docker --version
            docker compose version

            # Pastikan .env ada (isi var2 untuk nango-server & nango-db jika dipakai)
            if [ ! -f .env ]; then
              echo "::error::.env tidak ditemukan di $DEPLOY_DIR" >&2
              exit 1
            fi

            # Pastikan folder providers ada bila dibutuhkan oleh bind mount
            mkdir -p packages/providers

            # Catat image lama untuk rollback (jika ada)
            PREV_IMAGE=$(docker inspect --format='{{.Config.Image}}' nango-server 2>/dev/null || true)
            echo "Prev image: ${PREV_IMAGE:-<none>}"

            # Pull image terbaru sesuai compose
            docker compose pull nango-server || true
            docker compose pull nango-db || true
            docker compose pull nango-redis || true

            # Up/recreate service
            docker compose up -d

            # Health check eksternal (via reverse proxy/domain)
            echo "Health check: $HEALTH_URL"
            for i in $(seq 1 20); do
              code=$(curl -s -o /dev/null -w "%{http_code}" "$HEALTH_URL" || true)
              if [ "$code" = "200" ]; then
                echo "Healthy"
                exit 0
              fi
              sleep 5
            done

            echo "Health check FAILED. Rolling back nango-server..."
            if [ -n "$PREV_IMAGE" ]; then
              docker pull "$PREV_IMAGE" || true
              # Replace image untuk service nango-server lalu recreate
              docker stop nango-server || true
              docker rm nango-server || true
              # Jalankan kembali dengan image sebelumnya
              IMAGE_RESTORE_FILE=".image.restore"
              echo "IMAGE=$PREV_IMAGE" > "$IMAGE_RESTORE_FILE"
              # Override image lewat env substitution (compose file menggunakan image tetap untuk nango-server,
              # kita pakai 'docker run' manual untuk rollback cepat)
              docker run -d --name nango-server \
                --restart=always \
                --env-file .env \
                --network $(basename "$(pwd)")_nango \
                -p ${SERVER_PORT:-3003}:${SERVER_PORT:-3003} \
                -p ${CONNECT_UI_PORT:-3009}:${CONNECT_UI_PORT:-3009} \
                -v "$(pwd)/packages/providers/providers.yaml:/app/nango/packages/providers/providers.yaml" \
                "$PREV_IMAGE"
              rm -f "$IMAGE_RESTORE_FILE"
              exit 1
            else
              echo "Tidak ada image sebelumnya untuk rollback."
              exit 1
            fi

      - name: Mark success
        if: ${{ success() }}
        run: echo "Deploy OK"
